pipeline {
    agent any

    environment {
        VENV_DIR = "venv" // Directory for the virtual environment
        COVERAGE_REPORT_PATH = "coverage-report" // Path to store coverage reports
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning the repository...'
                git branch: 'main', url: 'git@github.com:avengers-p11/attendance-api.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing required dependencies...'
                sh '''
                    # Install python3-venv and pip3
                    echo "Installing python3-venv and pip3..."
                    sudo apt-get update
                    sudo apt-get install -y python3-venv python3-pip unzip curl

                    # Install Flask, Peewee, and pythonjsonlogger (via GitHub)
                    ${VENV_DIR}/bin/pip install flask peewee
                    ${VENV_DIR}/bin/pip install git+https://github.com/madzak/python-json-logger.git
                '''
            }
        }

        stage('Setup Python Virtual Environment') {
            steps {
                echo 'Setting up the Python virtual environment...'
                sh '''
                    # Create a virtual environment if it doesn't exist
                    if [ ! -d "$VENV_DIR" ]; then
                        python3 -m venv $VENV_DIR
                    fi

                    # Install required Python packages
                    ${VENV_DIR}/bin/pip install --upgrade pip
                    ${VENV_DIR}/bin/pip install -r requirements.txt || echo "requirements.txt not found, skipping dependency installation."
                    
                    # Ensure pytest and pytest-cov are installed for code coverage
                    ${VENV_DIR}/bin/pip install pytest pytest-cov
                '''
            }
        }

        stage('Run Tests and Generate Coverage Report') {
            steps {
                echo 'Running tests and generating code coverage report...'
                sh '''
                    # Run pytest with coverage option
                    ${VENV_DIR}/bin/pytest --cov=attendance_api --cov-report html:${COVERAGE_REPORT_PATH} --cov-report xml:${COVERAGE_REPORT_PATH}/coverage.xml
                '''
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            // Archive the coverage reports
            archiveArtifacts artifacts: 'coverage-report/coverage.xml, coverage-report/index.html', allowEmptyArchive: true
        }
        success {
            emailext(
                attachmentsPattern: 'coverage-report/coverage.xml,coverage-report/index.html',
                mimeType: 'text/html',
                body: """<html>
                            <body>
                                <h2>Jenkins Build ${currentBuild.currentResult}</h2>
                                <p>Job: ${env.JOB_NAME}</p>
                                <p>Build Number: ${env.BUILD_NUMBER}</p>
                                <p>Status: ${currentBuild.currentResult}</p>
                                <p>More details at: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                            </body>
                         </html>""",
                recipientProviders: [developers(), requestor()],
                subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
                to: 'anjalidhiman.as@gmail.com'
            )
        }
        failure {
            echo 'Pipeline failed.'
            emailext(
                mimeType: 'text/html',
                to: 'anjalidhiman.as@gmail.com',
                subject: 'Jenkins Pipeline Failure: Attendance-api',
                body: """<html>
                            <body>
                                <h2>Pipeline Failure</h2>
                                <p>Hello,</p>
                                <p>The Jenkins pipeline has failed. Please check the logs for details.</p>
                            </body>
                         </html>""",
                attachmentsPattern: 'coverage-report/coverage.xml,coverage-report/index.html'
            )
        }
    }
}
