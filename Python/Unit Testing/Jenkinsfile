pipeline {
    agent any

    environment {
        VENV_DIR = '/var/lib/jenkins/workspace/Scripted_Python/Unit Testing/venv'
    }

    stages {
        stage('Prepare Virtual Environment') {
            steps {
                echo 'Setting up Python virtual environment...'
                sh """
                    python3 -m venv ${VENV_DIR}
                """
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh """
                    . ${VENV_DIR}/bin/activate
                    pip install -r requirements.txt
                """
            }
        }

        stage('Install Missing Dependencies') {
            steps {
                echo 'Installing missing dependencies...'
                sh """
                    . ${VENV_DIR}/bin/activate
                    pip install flask peewee python-json-logger  # Corrected package name
                """
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running unit tests...'
                sh """
                    . ${VENV_DIR}/bin/activate
                    pytest --maxfail=5 --disable-warnings --tb=short > unit-test-report.txt || true
                """
            }
        }

        stage('Archive Test Results') {
            steps {
                echo 'Archiving test results...'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'unit-test-report.txt'
            }
        }

        stage('Send Email') {
            steps {
                script {
                    def subject = "Unit Test Results"
                    def body = "Please find the unit test results attached."
                    def recipients = "youremail@example.com"
                    def attachment = "unit-test-report.txt"

                    if (fileExists(attachment)) {
                        emailext subject: subject,
                                 body: body,
                                 to: recipients,
                                 attachmentsPattern: attachment
                    } else {
                        emailext subject: subject,
                                 body: "The test report could not be found.",
                                 to: recipients
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh """
                rm -rf ${VENV_DIR}
            """
        }
    }
}
