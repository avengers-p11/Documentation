node {
    def VENV_DIR = "venv"
    def scannerHome = tool 'Sonar' // Adjust if Sonar tool name differs

    try {
        stage('Clone Repository') {
            // Clone the repository
            git branch: 'main', url: 'git@github.com:avengers-p11/attendance-api.git'
        }

        stage('Install Dependencies') {
            // Install required system dependencies
            sh '''
                #!/bin/bash
                sudo apt-get update
                sudo apt-get install -y python3 python3-venv python3-pip curl
            '''
        }

        stage('Setup Python Virtual Environment') {
            // Set up Python virtual environment and install dependencies
            sh '''
                #!/bin/bash
                if [ ! -d "$VENV_DIR" ]; then
                    python3 -m venv "$VENV_DIR"
                fi
                
                # Activate the virtual environment
                source "$VENV_DIR/bin/activate"
                
                # Upgrade pip
                "$VENV_DIR/bin/pip" install --upgrade pip
                
                # If pyproject.toml exists, use poetry for dependency installation
                if [ -f "pyproject.toml" ]; then
                    "$VENV_DIR/bin/pip" install poetry
                    "$VENV_DIR/bin/poetry" install
                fi
                
                # Install pytest for testing
                "$VENV_DIR/bin/pip" install pytest
            '''
        }

        stage('Bug Analysis') {
            // Perform static code analysis with SonarQube
            withSonarQubeEnv('Sonar') {
                sh """
                    ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=attendance \
                        -Dsonar.projectName=Attendance-api \
                        -Dsonar.login=squ_4f371ade2db48dafec85157cda9d3d07e6a5c456 \
                        -Dsonar.issue.types=BUG \
                        -Dsonar.report.export.path=bugs-report.txt
                """
            }
        }

    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        // Send email on failure
        emailext(
            to: 'anjalidhiman.as@gmail.com',
            subject: 'Jenkins Pipeline Failure: Attendance-api',
            body: """
                <html>
                    <body>
                        <h2>Pipeline Failure</h2>
                        <p>Hello,</p>
                        <p>The Jenkins pipeline has failed. Pleas
