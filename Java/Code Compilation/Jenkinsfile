pipeline {
    agent any

    tools {
        maven 'Maven'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/mohitsainin/Salary-api.git'
            }
        }

        stage('Unit Tests & Coverage') {
            steps {
                sh '''
                    mvn clean test jacoco:report | tee unit-test-report.txt
                    echo "JaCoCo coverage report generated."
                    ls -l target/site/jacoco
                '''
            }
        }

        stage('Archive Reports') {
            steps {
                echo 'Archiving unit test and coverage reports...'
                archiveArtifacts artifacts: 'target/site/jacoco/**', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            archiveArtifacts artifacts: 'unit-test-report.txt', allowEmptyArchive: true
        }
        success {
            echo 'Pipeline finished successfully!'
            mail to: 'it.mohitsainin@gmail.com',
                 subject: "Jenkins Build Success: Job ${env.JOB_NAME} Build ${env.BUILD_NUMBER}",
                 body: """${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}
More info at: ${env.BUILD_URL}
                
Please find the attached reports for unit tests and code coverage.""",
                 attachments: [ 'unit-test-report.txt', 'target/site/jacoco/**' ]
        }
        failure {
            echo 'Pipeline failed.'
            mail to: 'it.mohitsainin@gmail.com',
                 subject: 'Jenkins Pipeline Failure: Salary-api',
                 body: '''Hello,

The Jenkins pipeline has failed. Please check the logs.'''
        }
    }
}
