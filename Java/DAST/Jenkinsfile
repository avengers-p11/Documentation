pipeline {
    agent any

    environment {
        ZAP_CLI = "zap-cli"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/mohitsainin/Salary-api.git'
            }    
        }

        stage('DAST') {
            steps {
                script {
                    sh '''
                        $ZAP_CLI quick-scan --self-contained --start --spider --scan https://github.com/avengers-p11/Documentation/blob/Declarative/Java/DAST/Jenkinsfile
                        echo "DAST scan completed."
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            archiveArtifacts artifacts: 'dast-report.pdf', allowEmptyArchive: true
        }
        success {
            echo 'Pipeline finished successfully!'
            emailext(
                attachmentsPattern: 'dast-report.pdf',
                body: """${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}
More info at: ${env.BUILD_URL}""",
                subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
                to: 'it.mohitsaini@gmail.com'
            )
        }
        failure {
            echo 'Pipeline failed.'
            emailext(
                to: 'it.mohitsaini@gmail.com',
                subject: 'Jenkins Pipeline Failure: Salary-api',
                body: '''Hello,

The Jenkins pipeline has failed. Please check the logs.'''.stripIndent(),
                attachmentsPattern: 'dast-report.pdf'
            )
        }
    }
}
