@Library('Jenkins-shared-libraries@main') _

pipeline {
    agent any

    environment {
        TARGET_URL = 'http://3.138.32.243:8080/swagger-ui/index.html'
        REPORT_FILE = 'dast_report.html'
    }

    stages {
        stage('Code Clone') {
            steps {
                script {
                    clone_repo()  // Ensure this function is defined in the shared library
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    dast_install_dependencies()  // Ensure this function is defined in the shared library
                }
            }
        }

        stage('Run DAST') {
            steps {
                script {
                    dast_run_scan("${TARGET_URL}", "${REPORT_FILE}")  // Ensure this function is defined in the shared library
                }
            }
        }

        stage('Publish DAST Report') {
            steps {
                script {
                    archiveArtifacts artifacts: "${REPORT_FILE}", allowEmptyArchive: true
                    // Debugging line to confirm the file exists
                    sh "ls -l ${REPORT_FILE}"  
                }
            }
        }
    }

    post {
        success {
            script {
                send_email(
                    "DAST Scan Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    "The DAST scan has been completed successfully.\n\nPlease find the attached report.",
                    "${REPORT_FILE}",
                    "it.mohitsaini@gmail.com"
                )
            }
        }

        failure {
            script {
                send_email(
                    "DAST Scan Failure: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    "The DAST scan has failed.\n\nPlease find the attached report.",
                    "${REPORT_FILE}",
                    "it.mohitsaini@gmail.com"
                )
            }
        }
    }
}

def send_email(subject, body, attachment, to) {
    emailext (
        subject: subject,
        body: body,
        attachmentsPattern: attachment,  // Ensure the file pattern matches your report file
        to: to
    )
}
