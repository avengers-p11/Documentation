node {
    // Set Maven tool and configure its path
    def mvnHome = tool name: 'Maven', type: 'maven'
    env.PATH = "${mvnHome}/bin:${env.PATH}"  // Add Maven to PATH

    stage('Clone Repository') {
        checkout([$class: 'GitSCM', 
                  branches: [[name: '*/main']], 
                  userRemoteConfigs: [[url: 'git@github.com:avengers-p11/salary-api.git']]])
    }

    stage('Code Compilation') {
        sh '''
            mvn compile > "compilation-report.txt"
            echo "Report generated:"
            ls -l "compilation-report.txt"  # Debug: confirm file exists
            cat "compilation-report.txt"
        '''
    }

    stage('Archive Report') {
        // Properly handle spaces in the path
        archiveArtifacts artifacts: 'compilation-report.txt', allowEmptyArchive: true
        sh "ls -l \"${env.WORKSPACE}\""  // Quote workspace path to handle spaces
    }

    stage('Send Email') {
        def reportFile = "${env.WORKSPACE}/compilation-report.txt"  // Path to the file
        
        if (fileExists(reportFile)) {  // Check if file exists before sending
            if (currentBuild.result == null || currentBuild.result == 'SUCCESS') {
                emailext(
                    attachmentsPattern: 'compilation-report.txt',  // Attach the report
                    body: """SUCCESS: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}
More info at: ${env.BUILD_URL}""",
                    recipientProviders: [developers(), requestor()],
                    subject: "Jenkins Build SUCCESS: Job ${env.JOB_NAME}",
                    to: 'it.mohitsaini@gmail.com'
                )
            } else {
                emailext(
                    to: 'it.mohitsaini@gmail.com',
                    subject: "Jenkins Pipeline Failure: ${env.JOB_NAME}",
                    body: '''Hello,

The Jenkins pipeline has failed. Please check the logs.'''.stripIndent()
                )
            }
        } else {
            echo "Error: Attachment file not found: ${reportFile}"
        }
    }
}
