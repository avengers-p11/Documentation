pipeline {
    agent any

    environment {
        scannerHome = tool 'Sonar'  // Ensure this matches the SonarQube tool name in Jenkins configuration
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'git@github.com:avengers-p11/salary-api.git'
            }
        }

        stage('Compile Project') {
            steps {
                echo 'Compiling the project using Maven...'
                sh 'mvn compile'
            }
        }

        stage('Static Code Analysis') {
            steps {
                echo 'Running Static Code Analysis using SonarQube...'
                script {
                    withSonarQubeEnv('Sonar') {
                        sh """
                          ${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=salary \
                            -Dsonar.projectName=Salary-api \
                            -Dsonar.host.url=http://3.90.82.155:9000 \
                            -Dsonar.login=squ_4f371ade2db48dafec85157cda9d3d07e6a5c456 \
                            -Dsonar.java.binaries=target/classes
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            archiveArtifacts artifacts: 'target/sonar-report.html', allowEmptyArchive: true
        }
        success {
            echo 'Pipeline finished successfully!'
            mail to: 'it.mohitsaini@gmail.com', subject: 'Java Static Code Analysis: Salary-api', body: 'The Jenkins pipeline has successfully completed.'
        }
        failure {
            echo 'Pipeline failed.'
            mail to: 'it.mohitsaini@gmail.com', subject: 'Jenkins Pipeline Failure: Salary-api', body: 'The Jenkins pipeline has failed. Please check the logs.'
        }
    }
}
