pipeline {
    agent any

    tools {
        maven 'Maven'  
    }

    environment {
        scannerHome = tool 'Sonar' 
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning the repository...'
                git branch: 'main', url: 'git@github.com:avengers-p11/salary-api.git'
            }
        }

        stage('Code Compilation') {
            steps {
                echo 'Compiling the code...'
                sh '''
                    mvn compile > compilation-report.txt
                    cat compilation-report.txt
                '''
            }
        }

        stage('Bug Analysis') {
            steps {
                echo 'Running SonarQube Bug Analysis...'
                script {
                    withSonarQubeEnv('Sonar') {
                        sh """
                          ${env.scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=salary \
                            -Dsonar.projectName=Salary-api \
                            -Dsonar.host.url=http://54.237.71.206:9000 \
                            -Dsonar.login=squ_4f371ade2db48dafec85157cda9d3d07e6a5c456 \
                            -Dsonar.java.binaries=target/classes \
                            -Dsonar.issue.types=BUG \
                            -Dsonar.report.export.path=target/sonar-report.json
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            archiveArtifacts artifacts: 'compilation-report.txt', allowEmptyArchive: true
            archiveArtifacts artifacts: 'target/sonar-report.json', allowEmptyArchive: true
        }
        success {
            echo 'Bug analysis completed successfully!'
            emailext(
                attachmentsPattern: 'compilation-report.txt,target/sonar-report.json',
                body: """${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}
More info at: ${env.BUILD_URL}""",
                recipientProviders: [developers(), requestor()],
                subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
                to: 'it.mohitsaini@gmail.com'
            )
        }
        failure {
            echo 'Bug analysis failed.'
            emailext(
                to: 'it.mohitsaini@gmail.com',
                subject: 'Jenkins Pipeline Failure: Salary-api',
                body: '''Hello,

The Jenkins pipeline has failed. Please check the logs.'''.stripIndent(),
                attachmentsPattern: 'compilation-report.txt,target/sonar-report.json'
            )
        }
    }
}
