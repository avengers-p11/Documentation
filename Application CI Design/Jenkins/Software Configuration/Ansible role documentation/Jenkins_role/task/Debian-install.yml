---
- name: Include OS-Specific variables
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Java package (Ubuntu/Debian)
  ansible.builtin.apt:
    name: "{{ java_apt_package }}"
    state: present
    update_cache: true
# when: ansible_os_family == 'Debian'

- name: Add Jenkins apt key in system.
  ansible.builtin.apt_key:
    url: "{{ jenkins_repo_key_url }}"
    state: present

- name: Add Jenkins apt repository.
  ansible.builtin.apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: true

- name: Download specific Jenkins version.
  ansible.builtin.apt:
    name: jenkins={{ jenkins_version }}
    state: present
    update_cache: true

- name: Stopping Jenkins service
  ansible.builtin.service:
    name: jenkins
    state: stopped

- name: Moving Jenkins data to new directory
  copy: src=/var/lib/jenkins/ dest={{ jenkins_data_dir }} remote_src=yes directory_mode=yes
  ignore_errors: true
- name: Change directory owner
  file:
    path: "{{ jenkins_data_dir }}"
    owner: jenkins
    group: jenkins
    recurse: yes

- name: Remove old Jenkins data directory
  file:
    path: /var/lib/jenkins/
    state: absent
  ignore_errors: true
- name: Create override directory for Jenkins service
  become: true
  file:
    path: /etc/systemd/system/jenkins.service.d
    state: directory

- name: Add override file for Jenkins
  template:
    src: override.conf.j2
    dest: /etc/systemd/system/jenkins.service.d/override.conf
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd daemon configuration
  systemd:
    daemon_reload: yes

- name: Start Jenkins Service
  ansible.builtin.service:
    name: jenkins
    state: started

- name: Register passwd
  ansible.builtin.command:
    cmd: cat /data/jenkins/secrets/initialAdminPassword
  register: intialPasswd

- name: Display passwd
  ansible.builtin.debug:
    var: intialPasswd.stdout_lines

# http://54.215.40.116:8080/
