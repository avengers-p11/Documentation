pipeline {
    agent any

    tools {
        go 'Go'  
        sonar'Sonar'  
    }

    environment {
        REPORT_FILE = "compile_report.txt" 
        SONAR_PROJECT_KEY = 'employee-api'  
        SONAR_PROJECT_NAME = 'Employee API' 
        SONAR_PROJECT_VERSION = '1.0'  
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'git@github.com:avengers-p11/employee-api.git'
            }
        }

        stage('Compile') {
            steps {
                // Run Go build and save the output to a report file
                sh "go build > ${REPORT_FILE} 2>&1"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                   
                    sh """
                    sonar-scanner \
                    -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                    -Dsonar.projectName=${SONAR_PROJECT_NAME} \
                    -Dsonar.projectVersion=${SONAR_PROJECT_VERSION} \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=http://100.27.13.45:9000 \
                    -Dsonar.login=squ_4f371ade2db48dafec85157cda9d3d07e6a5c456 \
                    -Dsonar.issue.types=BUG \
                    -Dsonar.report.export.path=bugs-report.txt
                    """
                }
            }
        }
    }

    post {
        always {
            
            emailext attachmentsPattern: "${REPORT_FILE}",
                     body: "Compilation report is attached.",
                     subject: "Go Project Compilation Report",
                     to: "it.mohitsaini@gmail.com"
        }

        success {
            echo 'Build and analysis completed successfully.'
        }

        failure {
            echo 'Build or analysis failed.'
        }
    }
}

